services:
  - type: web
    name: yogreek-frontend
    env: node
    plan: free
    buildCommand: |
      cd frontend
      rm -rf node_modules
      rm -rf .next
      npm install
      npm install @types/node @types/react @types/react-dom axios
      npm run build
    startCommand: |
      cd frontend
      npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_API_URL
        value: https://yogreek-product-service.onrender.com
      - key: PORT
        value: 10000
    healthCheckPath: /
    autoDeploy: true

  - type: web
    name: yogreek-product-service
    env: python
    plan: free
    buildCommand: |
      cd ecommerce/product_service
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
    startCommand: |
      cd ecommerce/product_service
      python manage.py migrate
      gunicorn product_service.wsgi:application
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: product_service.settings
      - key: DATABASE_URL
        fromDatabase:
          name: yogreek-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ALLOWED_HOSTS
        value: yogreek-product-service.onrender.com
      - key: DEBUG
        value: "False"

  - type: web
    name: yogreek-user-service
    env: python
    plan: free
    buildCommand: cd ecommerce/user_service && pip install -r requirements.txt
    startCommand: cd ecommerce/user_service && python manage.py migrate && gunicorn config.wsgi:application
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings.production
      - key: DATABASE_URL
        fromDatabase:
          name: yogreek-db
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: ALLOWED_HOSTS
        value: yogreek-user-service.onrender.com

databases:
  - name: yogreek-db
    databaseName: yogreek
    user: yogreek
    plan: free
